name: Build Platform Docs

on:
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:
  push:
    branches:
      - platform-docs
env:
  PLATFORM_CHANGELOG: "content/chainguard/autodocs/platform-changelog.md"

jobs:
  check-new-docs:
    runs-on: ubuntu-latest

    permissions:
      id-token: write # federates to talk to storage

    outputs:
      status: ${{ steps.compare-releases.outputs.status }}

    steps:
    - name: 'Github Actions Runner'
      uses: step-security/harden-runner@63c24ba6bd7ba022e95695ff85de572c04a18142 # v2.7.0
      with:
        egress-policy: audit

    - name: 'Checkout default branch to $GITHUB_WORKSPACE dir'
      uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # v3

    - name: Authenticate to Google Cloud
      id: auth
      uses: google-github-actions/auth@ceee102ec2387dd9e844e01b530ccd4ec87ce955 # v0
      with:
        token_format: 'access_token'
        project_id: "${{ secrets.PROJECT_ID }}"
        workload_identity_provider: "${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}"
        service_account: "${{ secrets.GCP_SERVICE_ACCOUNT }}"

    - id: compare-releases
      name: 'Compare published docs to upstream releases'
      run: |
        latest=$(gcloud storage cat \
          "gs://chainguard-academy/enforce-changelog/changelog.md" | \
          awk '/###/ {print $NF}' | \
          head -n 1)
        current=$(awk '/###/ {print $NF}' \
          ${{ env.PLATFORM_CHANGELOG }} | \
          head -n 1)
        if [ "$current" != "$latest" ]; then
          echo "status=outdated" >> $GITHUB_OUTPUT
          echo "latest=$latest" >> $GITHUB_OUTPUT
        fi

  integrate-platform-docs:
    runs-on: ubuntu-latest

    permissions:
      contents: write # writes to a branch on the repo
      id-token: write # federates with GCP and Sigstore
      pull-requests: write # creates PRs with the GH CLI

    needs: check-new-docs
    if: needs.check-new-docs.outputs.status == 'outdated'

    steps:
    - name: 'Github Actions Runner'
      uses: step-security/harden-runner@63c24ba6bd7ba022e95695ff85de572c04a18142 # v2.7.0
      with:
        egress-policy: audit

    - name: 'Checkout default branch to $GITHUB_WORKSPACE dir'
      uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # v3

    - name: 'Setup gitsign'
      uses: chainguard-dev/actions/setup-gitsign@main

    - name: Authenticate to Google Cloud
      id: auth
      uses: google-github-actions/auth@ceee102ec2387dd9e844e01b530ccd4ec87ce955 # v0
      with:
        token_format: 'access_token'
        project_id: "${{ secrets.PROJECT_ID }}"
        workload_identity_provider: "${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}"
        service_account: "${{ secrets.GCP_SERVICE_ACCOUNT }}"

    - uses: ./.github/workflows/integrate-platform-docs
      with:
        project_id: "${{ secrets.PROJECT_ID }}"
        workload_identity_provider: "${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}"
        service_account: "${{ secrets.GCP_SERVICE_ACCOUNT }}"
        storage_bucket: "${{ secrets.STORAGE_BUCKET }}"

    - uses: actions/setup-node@2fddd8803e2f5c9604345a0b591c3020ee971a93 # v3
      with:
        node-version: 16

    - name: Update themes
      run: git submodule update --init --recursive

    - name: npm install
      run: npm install

    - name: npm run build
      run: npm run build

    - name: Set up Octo-STS
      uses: chainguard-dev/octo-sts-action@6177b4481c00308b3839969c3eca88c96a91775f # v1.0.0
      id: octo-sts
      with:
        scope: chainguard-dev/edu
        identity: autodocs

    - name: Create a PR
      uses: peter-evans/create-pull-request@2b011faafdcbc9ceb11414d64d0573f37c774b04 # v4.2.3
      id: cpr
      with:
        token: ${{ steps.octo-sts.outputs.token }}
        commit-message: Update Images Reference
        title: "[AutoDocs] Update Platform Docs"
        body: "Platform docs ${{needs.check-new-docs.outputs.latest}} autocommit"
        signoff: true
        labels: |
          documentation
          platform
          automated
        assignees: erikaheidi

    - name: "Send notification to Slack"
      if: ${{ steps.cpr.outputs.pull-request-number }}
      uses: chainguard-dev/images-autodocs@1.5.0
      with:
       command: notify pullrequest
    env:
     AUTODOCS_SLACK_PRIMARY: ${{ secrets.AUTODOCS_SLACK_PRIMARY }}
     AUTODOCS_SLACK_SECONDARY: ${{ secrets.AUTODOCS_SLACK_SECONDARY }}
     AUTODOCS_SLACK_GENERAL: ${{ secrets.AUTODOCS_SLACK_GENERAL }}
     PR_NUMBER: ${{ steps.cpr.outputs.pull-request-number }}
     PR_ACTION: ${{ steps.cpr.outputs.pull-request-operation }}
     PR_URL: ${{ steps.cpr.outputs.pull-request-url }}
     PR_SHA: ${{ steps.cpr.outputs.pull-request-head-sha }}
