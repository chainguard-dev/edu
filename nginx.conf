worker_processes 2;

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;
    sendfile        on;
    keepalive_timeout  65;
    gzip  on;

    # add URLs after the `default` line that are moved and aren't redirecting via Hugo aliases
    map $request_uri $redirect_url {
        default "";
        "~^/chainguard/chainguard-enforce/chainctl-docs/how-to-install-chainctl(.+)?$" /chainguard/chainguard-enforce/how-to-install-chainctl$1;
        "~^/chainguard/chainguard-enforce/chainguard-enforce-kubernetes/chaingaurd-enforce-discovery-onboarding(.+)?$" /chainguard/chainguard-enforce/chainguard-enforce-discovery-onboarding$1;
        "~^/chainguard/chainguard-enforce/chainctl-docs(.+)?$" /chainguard/chainctl/chainctl-docs$1;
        "~^/chainguard/chainguard-enforce/chainguard-enforce-kubernetes/chainguard-enforce-events(.+)?$" /chainguard/chainguard-enforce/reference/events$1;
        "~^/chainguard/chainguard-enforce/chainguard-enforce-events(.+)?$" /chainguard/chainguard-enforce/reference/events$1;
        "~^/chainguard/chainguard-enforce/chainguard-enforce-kubernetes/changelog(.+)?$" /chainguard/chainguard-enforce/changelog$1;
        "~^/chainguard/chainguard-enforce/chainguard-enforce-kubernetes/how-to-disable-policy-enforcement(.+)?$" /chainguard/chainguard-enforce/policies/how-to-disable-policy-enforcement$1;
        "~^/open-source/apko/apk-package-manager(.+)?$" /open-source/wolfi/apk-package-manager$1;
    }

    server {
        listen       8080;
        server_name  localhost;

        # process $request_uri -> $redirect_url, preserving https, and ensure URLs don't have any ports in them
        if ($redirect_url != "") {
            rewrite ^(.*)$ $scheme://$http_host$redirect_url permanent;
        }

        location / {
            root   /var/lib/nginx/html/;
	    index  index.html index.htm;
            try_files $uri $uri/index.html =404;
        }

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }
}
error_log  stderr  notice;
